package it.academy.cv_storage.data.utilities;

import java.lang.reflect.Field;

import javax.persistence.Table;

import it.academy.cv_storage.exception.ClassHasNoCorrectAnnotation;

public class ClassInfoRetriever {
	
	private Class<?> className;
	
	

	public ClassInfoRetriever(Class<?> className) {
		this.className = className;
	}

	/*if class have @Annotation @Table  with  parameter = name of table in DB
	 * it will be returned table name
	 * else as default it will be returned class name*/
	public  String getEntityTableName() throws ClassHasNoCorrectAnnotation {
		if (className.isAnnotationPresent(Table.class)) {
			if ((className.getAnnotation(Table.class)).name().length() == 0) {
				return className.getAnnotation(Table.class).name();
						
			} else {
				return className.getSimpleName().toLowerCase();
			}
		} else 
		
		throw new ClassHasNoCorrectAnnotation
		("there is no annotation @Table in class: " + className.getName());
	}
	
	public   String[] getSelectParameters( String...searchParam) 
						throws NoSuchFieldException, SecurityException {
		String[] result = null;
		Field field = className.getDeclaredField("");
		field.getName();
		
		return result;
	}
}
